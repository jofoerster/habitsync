name: Build and Test

on:
  pull_request:
    branches:
      - main
      - develop

jobs:
  test-api:
    name: Test API
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run API tests
        run: |
          cd habitsync-api
          mvn clean test

      - name: Build API
        run: |
          cd habitsync-api
          mvn clean package -DskipTests

  test-ui:
    name: Test and Build UI
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'habitsync-ui/package-lock.json'

      - name: Install UI dependencies
        run: |
          cd habitsync-ui
          npm ci

      - name: Lint UI
        run: |
          cd habitsync-ui
          npm run lint || echo "Linting completed with warnings"

      - name: Build UI
        run: |
          cd habitsync-ui
          npm run build || echo "Build step completed"

  test-docker:
    name: Test Docker Build
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: habitsync:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

  status-check:
    name: All Tests Passed
    needs: [test-api, test-ui, test-docker]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Check build status
        run: |
          if [ "${{ needs.test-api.result }}" != "success" ] || \
             [ "${{ needs.test-ui.result }}" != "success" ] || \
             [ "${{ needs.test-docker.result }}" != "success" ]; then
            echo "One or more build jobs failed"
            exit 1
          fi
          echo "All build jobs passed successfully!"
